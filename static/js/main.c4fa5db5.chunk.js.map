{"version":3,"sources":["App.module.css","Components/Counter.tsx","Components/Button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","count","limitClass","maxCount","s","limit","className","Button","callback","title","disabled","buttons","onClick","App","useState","setCount","container","counter","buttonBlock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,QAAU,qBAAqB,QAAU,qBAAqB,YAAc,yBAAyB,MAAQ,qB,kKCSrJC,EAAsC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAC3CC,EAAaD,IADmD,EAAdE,SAChBC,IAAEC,MAAQ,GAClD,OACI,qBAAKC,UAAWJ,EAAhB,SAA6BD,KCJxBM,EAAoC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,MAChE,OACI,+BAAM,wBAAQS,SAAUT,EAAOK,UAAWF,IAAEO,QAASC,QAASJ,EAAxD,SAAmEC,OCoBlEI,MAxBf,WACI,IADW,EAGaC,mBAFT,GADJ,mBAGNb,EAHM,KAGCc,EAHD,KAUX,OACI,sBAAKT,UAAWF,IAAEY,UAAlB,UACI,qBAAKV,UAAWF,IAAEa,QAAlB,SACI,cAAC,EAAD,CAAShB,MAAOA,EAAOE,SAXpB,MAaP,sBAAKG,UAAWF,IAAEc,YAAlB,UACI,cAAC,EAAD,CAAQV,SAZA,WAChBO,EAASd,EAAQ,IAWsBQ,MAAO,MAAOR,MAd1C,IAciDA,IACpD,cAAC,EAAD,CAAQO,SAVD,WACfO,EAPW,IAgB2BN,MAAO,QAASR,MAhB3C,IAgBkDA,WCVtDkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c4fa5db5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Gw0hg\",\"buttons\":\"App_buttons__2jeqC\",\"counter\":\"App_counter__1N54d\",\"buttonBlock\":\"App_buttonBlock__2iESY\",\"limit\":\"App_limit__1oH3s\"};","import React from 'react';\r\nimport s from '../App.module.css'\r\n\r\n\r\nexport type CounterPropsType = {\r\n    count: number\r\n    maxCount:number\r\n}\r\n\r\n\r\nexport const Counter: React.FC<CounterPropsType> = ({count, maxCount}) => {\r\n    const limitClass = count === maxCount ? s.limit : ''\r\n    return (\r\n        <div className={limitClass}>{count}</div>\r\n    )\r\n}","import React from 'react';\r\nimport s from '../App.module.css'\r\n\r\nexport type ButtonPropsType = {\r\n    callback: () => void\r\n    title: string\r\n    count: boolean\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({callback, title, count}) => {\r\n    return (\r\n        <span><button disabled={count} className={s.buttons} onClick={callback}>{title}</button></span>\r\n    )\r\n}","import React, {useState} from 'react';\nimport s from './App.module.css'\nimport './App.css';\nimport {Counter} from \"./Components/Counter\";\nimport {Button} from \"./Components/Button\";\nimport {findAllByDisplayValue} from \"@testing-library/react\";\n\nfunction App() {\n    let minCount = 0\n    let maxCount = 5\n    let [count, setCount] = useState(minCount)\n    const changeCount = () => {\n        setCount(count + 1)\n    }\n    const resetCount = () => {\n        setCount(minCount)\n    }\n    return (\n        <div className={s.container}>\n            <div className={s.counter}>\n                <Counter count={count} maxCount={maxCount}/>\n            </div>\n            <div className={s.buttonBlock}>\n                <Button callback={changeCount} title={'Inc'} count={count === maxCount}/>\n                <Button callback={resetCount} title={'Reset'} count={count === minCount}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}